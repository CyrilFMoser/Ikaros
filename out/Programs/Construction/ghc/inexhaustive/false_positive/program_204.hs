module Program_2 () where 

 main = print $ show v_b
data B_A = C_A | C_B B_A (((Int,Char),(Bool,Char))) | C_C B_A | C_D (((Int,Int),(Bool,Char))) | C_E ((B_A,B_A)) B_A

v_a :: B_A
v_a = undefined
v_b :: Int
v_b = case v_a of 
  C_A -> 0 
  C_B C_A (((_,_),(_,_))) -> 1 
  C_B (C_B C_A ((_,_))) (((_,_),(_,_))) -> 2 
  C_B (C_B (C_B _ _) ((_,_))) (((_,_),(_,_))) -> 3 
  C_B (C_B (C_C _) ((_,_))) (((_,_),(_,_))) -> 4 
  C_B (C_B (C_D _) ((_,_))) (((_,_),(_,_))) -> 5 
  C_B (C_B (C_E _ _) ((_,_))) (((_,_),(_,_))) -> 6 
  C_B (C_C C_A) (((_,_),(_,_))) -> 7 
  C_B (C_C (C_B _ _)) (((_,_),(_,_))) -> 8 
  C_B (C_C (C_C _)) (((_,_),(_,_))) -> 9 
  C_B (C_C (C_E _ _)) (((_,_),(_,_))) -> 10 
  C_B (C_D ((_,_))) (((_,_),(_,_))) -> 11 
  C_B (C_E ((_,_)) C_A) (((_,_),(_,_))) -> 12 
  C_B (C_E ((_,_)) (C_B _ _)) (((_,_),(_,_))) -> 13 
  C_B (C_E ((_,_)) (C_C _)) (((_,_),(_,_))) -> 14 
  C_B (C_E ((_,_)) (C_D _)) (((_,_),(_,_))) -> 15 
  C_B (C_E ((_,_)) (C_E _ _)) (((_,_),(_,_))) -> 16 
  C_C C_A -> 17 
  C_C (C_B _ _) -> 18 
  C_C (C_C _) -> 19 
  C_C (C_D _) -> 20 
  C_C (C_E ((_,_)) _) -> 21 
  C_D (((_,_),(_,_))) -> 22 
  C_E _ _ -> 23 
