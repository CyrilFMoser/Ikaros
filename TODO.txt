- Merge generics

- Allow variance declarations for case classes 

- In type generation check the type depth of an available concrete type

- Add typ <: GENERIC case to Graph::is_satisfiable

- In get_base, before returning, check if the type is concrete. If it is not and there is an equality constraint for that generic
  substitute it with that. Otherwise if there are subtype constraints, try to find all the possible types that could be used. 
  Choose any of them (could be improved later). If there are no subtype constraints either, just use a random concrete type.